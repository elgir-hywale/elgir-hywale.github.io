<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【matplotlib绘图】Bar Charts（柱状图）</title>
      <link href="/2020/05/26/matplotlib-hui-tu-bar-charts-zhu-zhuang-tu/"/>
      <url>/2020/05/26/matplotlib-hui-tu-bar-charts-zhu-zhuang-tu/</url>
      
        <content type="html"><![CDATA[<h1 id="【matplotlib绘图】Bar-Charts（柱状图）"><a href="#【matplotlib绘图】Bar-Charts（柱状图）" class="headerlink" title="【matplotlib绘图】Bar Charts（柱状图）"></a>【matplotlib绘图】Bar Charts（柱状图）</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>​    <code>matplotlib.pyplot.bar(x, height, width=0.8, bottom=None, \*, align='center'， \*\*kwargs)</code></p><h3 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h3><p>​    <code>x</code>: bars的x坐标</p><p>​    <code>height</code>: bars的高度</p><p>​    <code>width</code>: bars的宽度（设置时需要考虑bars的坐标，如果width的值 &gt; Δx会发生重叠）默认值0.8</p><p>​    <code>bottom</code>: bars的底部相对于x轴的高度（例如，绘制stacked bar）默认值None</p><p>​    <code>align</code>: 每一条bar对应到其x坐标的方式（’center’则以其中心对应x坐标；’edge’则以其左边缘对应x坐标</p><p>​                  若要以右边缘对应，还需设置width为负值）默认值’center’</p><h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><p>​    <code>color</code>: bars的颜色</p><p>​    <code>fc</code>: 单个字符表示bars的颜色</p><p>​    <code>edgecolor</code>: bars的边缘线的颜色</p><p>​    <code>linewidth</code>: bars的边缘线的宽度</p><p>​    <code>tick_label</code>: bars的x轴坐标的标记</p><p>​    <code>label</code>: bars所代表的意义（加上后面调用legend方法会出现一个框框）</p><p>​    <code>xerr, yerr</code>: errorbars的误差范围（感觉加了errorbars有点丑qaq）</p><p>​    <code>ecolor</code>: errorbars的颜色</p><p>​    <code>log</code>: 把y轴变成对数的范围</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>​    此方法<code>.bar()</code>为绘制垂直柱状图；若绘制水平柱状图，则为<code>.barh()</code>；另外还有<code>.errorbar()</code>的方法</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>动画实现冒泡排序（效率最差的排序算法）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">BubbleSort_AnimationDemo</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''排序演示'''</span>    <span class="token keyword">def</span> <span class="token function">AnimationDemo</span><span class="token punctuation">(</span>sub_ax1<span class="token punctuation">,</span> sub_lst1<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''动画演示'''</span>        n <span class="token operator">=</span> len<span class="token punctuation">(</span>sub_lst1<span class="token punctuation">)</span>        x <span class="token operator">=</span> <span class="token punctuation">[</span>_ <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        height <span class="token operator">=</span> sub_lst1        sub_ax1<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> height<span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">,</span> tick_label<span class="token operator">=</span>x<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'numbers'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'rgb'</span><span class="token punctuation">)</span>        sub_ax1<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>        plt<span class="token punctuation">.</span>pause<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">BubbleSort</span><span class="token punctuation">(</span>sub_ax2<span class="token punctuation">,</span> sub_lst2<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''冒泡排序'''</span>        n <span class="token operator">=</span> len<span class="token punctuation">(</span>sub_lst2<span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>n <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> sub_lst2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> sub_lst2<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                    sub_lst2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> sub_lst2<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> sub_lst2<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sub_lst2<span class="token punctuation">[</span>j<span class="token punctuation">]</span>                    sub_ax2<span class="token punctuation">.</span>cla<span class="token punctuation">(</span><span class="token punctuation">)</span>                    AnimationDemo<span class="token punctuation">(</span>sub_ax2<span class="token punctuation">,</span> sub_lst2<span class="token punctuation">)</span>    fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'BubbleSort_AnimationDemo'</span><span class="token punctuation">)</span>    BubbleSort<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> lst<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    lst <span class="token operator">=</span> <span class="token punctuation">[</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    BubbleSort_AnimationDemo<span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h4><p><img src="gambling.gif" alt="gambling"></p><h3 id="其他例子："><a href="#其他例子：" class="headerlink" title="其他例子："></a>其他例子：</h3><p>1、<a href="https://matplotlib.org/3.2.1/gallery/statistics/errorbar_features.html" target="_blank" rel="noopener">https://matplotlib.org/3.2.1/gallery/statistics/errorbar_features.html</a></p><p>2、<a href="https://matplotlib.org/3.2.1/gallery/statistics/errorbar.html" target="_blank" rel="noopener">https://matplotlib.org/3.2.1/gallery/statistics/errorbar.html</a></p><p>3、<a href="https://matplotlib.org/3.2.1/gallery/lines_bars_and_markers/bar_stacked.html" target="_blank" rel="noopener">https://matplotlib.org/3.2.1/gallery/lines_bars_and_markers/bar_stacked.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
